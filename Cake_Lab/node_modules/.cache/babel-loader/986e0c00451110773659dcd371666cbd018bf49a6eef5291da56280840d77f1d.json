{"ast":null,"code":"var _jsxFileName = \"/Users/fionaeshuneshun/bnta_work/week_09/day_03/Lab_BNTA_bakery/Cake_Lab/src/cake/Cake.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Cake = _ref => {\n  let {\n    cakeName,\n    ingredients,\n    price,\n    rating\n  } = _ref;\n  const recipeList = listOfIngredients => {\n    const words = listOfIngredients.split(\" \");\n    let output = \"\";\n    for (let i = 0; i < words.length; i++) {\n      output += words[i];\n      if (i !== words.length - 1) {\n        output += \", \";\n      }\n    }\n    return output + \".\";\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: cakeName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Ingredients: \", recipeList(ingredients)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Price: \", price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Rating: \", rating]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_c = Cake;\nexport default Cake;\nvar _c;\n$RefreshReg$(_c, \"Cake\");","map":{"version":3,"names":["Cake","_ref","cakeName","ingredients","price","rating","recipeList","listOfIngredients","words","split","output","i","length","_jsxDEV","_Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fionaeshuneshun/bnta_work/week_09/day_03/Lab_BNTA_bakery/Cake_Lab/src/cake/Cake.js"],"sourcesContent":["const Cake = ({cakeName, ingredients, price, rating}) => {\n\n  const recipeList = (listOfIngredients) => {\n    const words = listOfIngredients.split(\" \");\n    let output = \"\";\n    for (let i = 0; i < words.length; i++) {\n      output += words[i];\n      if (i !== words.length - 1) {\n        output += \", \";\n      }\n    }\n    return output + \".\";\n  };\n\n  \n  return (\n    <>\n        <h2>{cakeName}</h2>\n        <p>Ingredients: {recipeList(ingredients)}</p>\n        <p>Price: {price}</p>\n        <p>Rating: {rating}</p>\n        \n    </>\n  )\n}\n\nexport default Cake;"],"mappings":";;;AAAA,MAAMA,IAAI,GAAGC,IAAA,IAA4C;EAAA,IAA3C;IAACC,QAAQ;IAAEC,WAAW;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAAJ,IAAA;EAElD,MAAMK,UAAU,GAAIC,iBAAiB,IAAK;IACxC,MAAMC,KAAK,GAAGD,iBAAiB,CAACE,KAAK,CAAC,GAAG,CAAC;IAC1C,IAAIC,MAAM,GAAG,EAAE;IACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;MACrCD,MAAM,IAAIF,KAAK,CAACG,CAAC,CAAC;MAClB,IAAIA,CAAC,KAAKH,KAAK,CAACI,MAAM,GAAG,CAAC,EAAE;QAC1BF,MAAM,IAAI,IAAI;MAChB;IACF;IACA,OAAOA,MAAM,GAAG,GAAG;EACrB,CAAC;EAGD,oBACEG,OAAA,CAAAC,SAAA;IAAAC,QAAA,gBACIF,OAAA;MAAAE,QAAA,EAAKb;IAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnBN,OAAA;MAAAE,QAAA,GAAG,eAAa,EAACT,UAAU,CAACH,WAAW,CAAC;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7CN,OAAA;MAAAE,QAAA,GAAG,SAAO,EAACX,KAAK;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBN,OAAA;MAAAE,QAAA,GAAG,UAAQ,EAACV,MAAM;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eAEzB,CAAC;AAEP,CAAC;AAAAC,EAAA,GAxBKpB,IAAI;AA0BV,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}