{"ast":null,"code":"var _jsxFileName = \"/Users/fionaeshuneshun/bnta_work/week_09/day_03/Lab_BNTA_bakery/Cake_Lab/src/cake/Cake.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Cake = _ref => {\n  let {\n    cakeName,\n    ingredients,\n    price,\n    rating\n  } = _ref;\n  // const newIngredient = Cake.ingredients.map((ingredient) => {\n  //   return <li>{ingredient}</li>\n  // });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: cakeName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: cakeName.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        id: index,\n        children: ingredient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Price: \", price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Rating: \", rating]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_c = Cake;\nexport default Cake;\nvar _c;\n$RefreshReg$(_c, \"Cake\");","map":{"version":3,"names":["Cake","_ref","cakeName","ingredients","price","rating","_jsxDEV","_Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","map","ingredient","index","id","_c","$RefreshReg$"],"sources":["/Users/fionaeshuneshun/bnta_work/week_09/day_03/Lab_BNTA_bakery/Cake_Lab/src/cake/Cake.js"],"sourcesContent":["const Cake = ({cakeName, ingredients, price, rating}) => {\n\n  // const newIngredient = Cake.ingredients.map((ingredient) => {\n  //   return <li>{ingredient}</li>\n  // });\n\n  return (\n    <>\n        <h2>{cakeName}</h2>\n        <ul>\n        {cakeName.ingredients.map((ingredient, index) => (\n          <li id={index}>{ingredient}</li>))}\n      </ul>\n        <p>Price: {price}</p>\n        <p>Rating: {rating}</p>\n        \n    </>\n  )\n}\n\nexport default Cake;"],"mappings":";;;AAAA,MAAMA,IAAI,GAAGC,IAAA,IAA4C;EAAA,IAA3C;IAACC,QAAQ;IAAEC,WAAW;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAAJ,IAAA;EAElD;EACA;EACA;;EAEA,oBACEK,OAAA,CAAAC,SAAA;IAAAC,QAAA,gBACIF,OAAA;MAAAE,QAAA,EAAKN;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnBN,OAAA;MAAAE,QAAA,EACCN,QAAQ,CAACC,WAAW,CAACU,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBAC1CT,OAAA;QAAIU,EAAE,EAAED,KAAM;QAAAP,QAAA,EAAEM;MAAU;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACHN,OAAA;MAAAE,QAAA,GAAG,SAAO,EAACJ,KAAK;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBN,OAAA;MAAAE,QAAA,GAAG,UAAQ,EAACH,MAAM;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eAEzB,CAAC;AAEP,CAAC;AAAAK,EAAA,GAlBKjB,IAAI;AAoBV,eAAeA,IAAI;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}